// @ts-check
'use strict';

import { deepMergeConfig } from '@-xun/symbiote/assets';
import { assertEnvironment, moduleExport } from '@-xun/symbiote/assets/jest.config.mjs';
import { createDebugLogger } from 'rejoinder';

const debug = createDebugLogger({ namespace: 'symbiote:config:jest' });

const config = deepMergeConfig(
  moduleExport({ derivedAliases: getJestAliases(), ...assertEnvironment() }),
  {
    // ? Make sure jest-haste-map doesn't try to parse and cache dummies
    modulePathIgnorePatterns: ['/dummies/']
  }
);

export default config;

debug('exported config: %O', config);

function getJestAliases() {
  // ! These aliases are auto-generated by symbiote. Instead of modifying them
  // ! directly, consider regenerating aliases across the entire project with:
  // ! `npx symbiote project renovate --regenerate-assets --assets-preset ...`
  return {
    '^multiverse\\+common\\x2ddummies:(.+)$': '<rootDir>/packages/common-dummies/src/$1',
    '^multiverse\\+jest:(.+)$': '<rootDir>/packages/jest/src/$1',
    '^multiverse\\+test\\x2dmock\\x2dargv:(.+)$':
      '<rootDir>/packages/test-mock-argv/src/$1',
    '^multiverse\\+test\\x2dmock\\x2denv:(.+)$':
      '<rootDir>/packages/test-mock-env/src/$1',
    '^multiverse\\+test\\x2dmock\\x2dexit:(.+)$':
      '<rootDir>/packages/test-mock-exit/src/$1',
    '^multiverse\\+test\\x2dmock\\x2dfixture:(.+)$':
      '<rootDir>/packages/test-mock-fixture/src/$1',
    '^multiverse\\+test\\x2dmock\\x2dimport:(.+)$':
      '<rootDir>/packages/test-mock-import/src/$1',
    '^multiverse\\+test\\x2dmock\\x2doutput:(.+)$':
      '<rootDir>/packages/test-mock-output/src/$1',
    '^multiverse\\+common\\x2ddummies$':
      '<rootDir>/packages/common-dummies/src/index.ts',
    '^multiverse\\+jest$': '<rootDir>/packages/jest/src/index.ts',
    '^multiverse\\+test\\x2dmock\\x2dargv$':
      '<rootDir>/packages/test-mock-argv/src/index.ts',
    '^multiverse\\+test\\x2dmock\\x2denv$':
      '<rootDir>/packages/test-mock-env/src/index.ts',
    '^multiverse\\+test\\x2dmock\\x2dexit$':
      '<rootDir>/packages/test-mock-exit/src/index.ts',
    '^multiverse\\+test\\x2dmock\\x2dfixture$':
      '<rootDir>/packages/test-mock-fixture/src/index.ts',
    '^multiverse\\+test\\x2dmock\\x2dimport$':
      '<rootDir>/packages/test-mock-import/src/index.ts',
    '^multiverse\\+test\\x2dmock\\x2doutput$':
      '<rootDir>/packages/test-mock-output/src/index.ts',
    '^rootverse\\+common\\x2ddummies:(.+)$': '<rootDir>/packages/common-dummies/$1',
    '^rootverse\\+jest:(.+)$': '<rootDir>/packages/jest/$1',
    '^rootverse\\+test\\x2dmock\\x2dargv:(.+)$': '<rootDir>/packages/test-mock-argv/$1',
    '^rootverse\\+test\\x2dmock\\x2denv:(.+)$': '<rootDir>/packages/test-mock-env/$1',
    '^rootverse\\+test\\x2dmock\\x2dexit:(.+)$': '<rootDir>/packages/test-mock-exit/$1',
    '^rootverse\\+test\\x2dmock\\x2dfixture:(.+)$':
      '<rootDir>/packages/test-mock-fixture/$1',
    '^rootverse\\+test\\x2dmock\\x2dimport:(.+)$':
      '<rootDir>/packages/test-mock-import/$1',
    '^rootverse\\+test\\x2dmock\\x2doutput:(.+)$':
      '<rootDir>/packages/test-mock-output/$1',
    '^rootverse:(.+)$': '<rootDir>/$1',
    '^universe\\+common\\x2ddummies:(.+)$': '<rootDir>/packages/common-dummies/src/$1',
    '^universe\\+jest:(.+)$': '<rootDir>/packages/jest/src/$1',
    '^universe\\+test\\x2dmock\\x2dargv:(.+)$':
      '<rootDir>/packages/test-mock-argv/src/$1',
    '^universe\\+test\\x2dmock\\x2denv:(.+)$': '<rootDir>/packages/test-mock-env/src/$1',
    '^universe\\+test\\x2dmock\\x2dexit:(.+)$':
      '<rootDir>/packages/test-mock-exit/src/$1',
    '^universe\\+test\\x2dmock\\x2dfixture:(.+)$':
      '<rootDir>/packages/test-mock-fixture/src/$1',
    '^universe\\+test\\x2dmock\\x2dimport:(.+)$':
      '<rootDir>/packages/test-mock-import/src/$1',
    '^universe\\+test\\x2dmock\\x2doutput:(.+)$':
      '<rootDir>/packages/test-mock-output/src/$1',
    '^universe\\+common\\x2ddummies$': '<rootDir>/packages/common-dummies/src/index.ts',
    '^universe\\+jest$': '<rootDir>/packages/jest/src/index.ts',
    '^universe\\+test\\x2dmock\\x2dargv$':
      '<rootDir>/packages/test-mock-argv/src/index.ts',
    '^universe\\+test\\x2dmock\\x2denv$':
      '<rootDir>/packages/test-mock-env/src/index.ts',
    '^universe\\+test\\x2dmock\\x2dexit$':
      '<rootDir>/packages/test-mock-exit/src/index.ts',
    '^universe\\+test\\x2dmock\\x2dfixture$':
      '<rootDir>/packages/test-mock-fixture/src/index.ts',
    '^universe\\+test\\x2dmock\\x2dimport$':
      '<rootDir>/packages/test-mock-import/src/index.ts',
    '^universe\\+test\\x2dmock\\x2doutput$':
      '<rootDir>/packages/test-mock-output/src/index.ts',
    '^universe:(.+)$': '<rootDir>/src/$1',
    '^universe$': '<rootDir>/src/index.ts',
    '^testverse\\+common\\x2ddummies:(.+)$': '<rootDir>/packages/common-dummies/test/$1',
    '^testverse\\+jest:(.+)$': '<rootDir>/packages/jest/test/$1',
    '^testverse\\+test\\x2dmock\\x2dargv:(.+)$':
      '<rootDir>/packages/test-mock-argv/test/$1',
    '^testverse\\+test\\x2dmock\\x2denv:(.+)$':
      '<rootDir>/packages/test-mock-env/test/$1',
    '^testverse\\+test\\x2dmock\\x2dexit:(.+)$':
      '<rootDir>/packages/test-mock-exit/test/$1',
    '^testverse\\+test\\x2dmock\\x2dfixture:(.+)$':
      '<rootDir>/packages/test-mock-fixture/test/$1',
    '^testverse\\+test\\x2dmock\\x2dimport:(.+)$':
      '<rootDir>/packages/test-mock-import/test/$1',
    '^testverse\\+test\\x2dmock\\x2doutput:(.+)$':
      '<rootDir>/packages/test-mock-output/test/$1',
    '^testverse:(.+)$': '<rootDir>/test/$1',
    '^typeverse:(.+)$': '<rootDir>/types/$1'
  };
}
