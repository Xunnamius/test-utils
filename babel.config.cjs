// @ts-check
'use strict';

const { deepMergeConfig } = require('@-xun/symbiote/assets');

const {
  assertEnvironment,
  moduleExport
} = require('@-xun/symbiote/assets/babel.config.cjs');

const { createDebugLogger } = require('rejoinder');

const debug = createDebugLogger({ namespace: 'symbiote:config:babel' });

module.exports = deepMergeConfig(
  moduleExport({
    derivedAliases: getBabelAliases(),
    ...assertEnvironment({ projectRoot: __dirname })
  }),
  {
    // Any custom configs here will be deep merged with the moduleExport result
  }
);

debug('exported config: %O', module.exports);

function getBabelAliases() {
  // ! These aliases are auto-generated by symbiote. Instead of modifying them
  // ! directly, consider regenerating aliases across the entire project with:
  // ! `npx symbiote project renovate --regenerate-assets --assets-preset ...`
  return {
    '^multiverse\\+common\\x2ddummies:(.+)$': './packages/common-dummies/src/$1',
    '^multiverse\\+jest:(.+)$': './packages/jest/src/$1',
    '^multiverse\\+test\\x2dmock\\x2dargv:(.+)$': './packages/test-mock-argv/src/$1',
    '^multiverse\\+test\\x2dmock\\x2denv:(.+)$': './packages/test-mock-env/src/$1',
    '^multiverse\\+test\\x2dmock\\x2dexit:(.+)$': './packages/test-mock-exit/src/$1',
    '^multiverse\\+test\\x2dmock\\x2dfixture:(.+)$':
      './packages/test-mock-fixture/src/$1',
    '^multiverse\\+test\\x2dmock\\x2dimport:(.+)$': './packages/test-mock-import/src/$1',
    '^multiverse\\+test\\x2dmock\\x2doutput:(.+)$': './packages/test-mock-output/src/$1',
    '^multiverse\\+common\\x2ddummies$': './packages/common-dummies/src/index.js',
    '^multiverse\\+jest$': './packages/jest/src/index.js',
    '^multiverse\\+test\\x2dmock\\x2dargv$': './packages/test-mock-argv/src/index.js',
    '^multiverse\\+test\\x2dmock\\x2denv$': './packages/test-mock-env/src/index.js',
    '^multiverse\\+test\\x2dmock\\x2dexit$': './packages/test-mock-exit/src/index.js',
    '^multiverse\\+test\\x2dmock\\x2dfixture$':
      './packages/test-mock-fixture/src/index.js',
    '^multiverse\\+test\\x2dmock\\x2dimport$':
      './packages/test-mock-import/src/index.js',
    '^multiverse\\+test\\x2dmock\\x2doutput$':
      './packages/test-mock-output/src/index.js',
    '^universe\\+common\\x2ddummies:(.+)$': './packages/common-dummies/src/$1',
    '^universe\\+jest:(.+)$': './packages/jest/src/$1',
    '^universe\\+test\\x2dmock\\x2dargv:(.+)$': './packages/test-mock-argv/src/$1',
    '^universe\\+test\\x2dmock\\x2denv:(.+)$': './packages/test-mock-env/src/$1',
    '^universe\\+test\\x2dmock\\x2dexit:(.+)$': './packages/test-mock-exit/src/$1',
    '^universe\\+test\\x2dmock\\x2dfixture:(.+)$': './packages/test-mock-fixture/src/$1',
    '^universe\\+test\\x2dmock\\x2dimport:(.+)$': './packages/test-mock-import/src/$1',
    '^universe\\+test\\x2dmock\\x2doutput:(.+)$': './packages/test-mock-output/src/$1',
    '^universe\\+common\\x2ddummies$': './packages/common-dummies/src/index.js',
    '^universe\\+jest$': './packages/jest/src/index.js',
    '^universe\\+test\\x2dmock\\x2dargv$': './packages/test-mock-argv/src/index.js',
    '^universe\\+test\\x2dmock\\x2denv$': './packages/test-mock-env/src/index.js',
    '^universe\\+test\\x2dmock\\x2dexit$': './packages/test-mock-exit/src/index.js',
    '^universe\\+test\\x2dmock\\x2dfixture$':
      './packages/test-mock-fixture/src/index.js',
    '^universe\\+test\\x2dmock\\x2dimport$': './packages/test-mock-import/src/index.js',
    '^universe\\+test\\x2dmock\\x2doutput$': './packages/test-mock-output/src/index.js',
    '^universe:(.+)$': './src/$1',
    '^universe$': './src/index.js',
    '^testverse\\+common\\x2ddummies:(.+)$': './packages/common-dummies/test/$1',
    '^testverse\\+jest:(.+)$': './packages/jest/test/$1',
    '^testverse\\+test\\x2dmock\\x2dargv:(.+)$': './packages/test-mock-argv/test/$1',
    '^testverse\\+test\\x2dmock\\x2denv:(.+)$': './packages/test-mock-env/test/$1',
    '^testverse\\+test\\x2dmock\\x2dexit:(.+)$': './packages/test-mock-exit/test/$1',
    '^testverse\\+test\\x2dmock\\x2dfixture:(.+)$':
      './packages/test-mock-fixture/test/$1',
    '^testverse\\+test\\x2dmock\\x2dimport:(.+)$': './packages/test-mock-import/test/$1',
    '^testverse\\+test\\x2dmock\\x2doutput:(.+)$': './packages/test-mock-output/test/$1',
    '^testverse:(.+)$': './test/$1',
    '^typeverse:(.+)$': './types/$1',
    '^rootverse\\+common\\x2ddummies:(.+)$': './packages/common-dummies/$1',
    '^rootverse\\+jest:(.+)$': './packages/jest/$1',
    '^rootverse\\+test\\x2dmock\\x2dargv:(.+)$': './packages/test-mock-argv/$1',
    '^rootverse\\+test\\x2dmock\\x2denv:(.+)$': './packages/test-mock-env/$1',
    '^rootverse\\+test\\x2dmock\\x2dexit:(.+)$': './packages/test-mock-exit/$1',
    '^rootverse\\+test\\x2dmock\\x2dfixture:(.+)$': './packages/test-mock-fixture/$1',
    '^rootverse\\+test\\x2dmock\\x2dimport:(.+)$': './packages/test-mock-import/$1',
    '^rootverse\\+test\\x2dmock\\x2doutput:(.+)$': './packages/test-mock-output/$1',
    '^rootverse:(.+)$': './$1'
  };
}
